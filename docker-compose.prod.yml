version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: miltera-postgres-prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-fixlog}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - fixlog-network-prod

  redis:
    image: redis:7.2.9-alpine
    container_name: miltera-redis-prod
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes: 
      - redis_data_prod:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fixlog-network-prod

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: miltera-api-prod
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-fixlog}
      REDIS_URL: redis://redis:6379
      NODE_ENV: production
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - fixlog-network-prod

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: miltera-web-prod
    ports:
      - "3000:3002"
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
      NEXT_PUBLIC_APP_NAME: ${NEXT_PUBLIC_APP_NAME:-"FixLog Teknik Servis PortalÄ±"}
      NEXT_PUBLIC_WEBSOCKET_URL: ${NEXT_PUBLIC_WEBSOCKET_URL:-ws://localhost:3001}
      NODE_ENV: production
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - fixlog-network-prod

  nginx:
    image: nginx:alpine
    container_name: miltera-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
      - api
    restart: unless-stopped
    networks:
      - fixlog-network-prod

volumes:
  postgres_data_prod:
  redis_data_prod:

networks:
  fixlog-network-prod:
    driver: bridge
