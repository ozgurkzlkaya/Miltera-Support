/**
 * Miltera Fixlog Frontend - TSP Dashboard
 * 
 * Bu dosya, Teknik Servis Personeli (TSP) rolÃ¼ndeki kullanÄ±cÄ±lar iÃ§in Ã¶zel dashboard sayfasÄ±dÄ±r.
 * ÃœrÃ¼n yÃ¶netimi, fabrikasyon testi ve sevkiyat iÅŸlemlerini iÃ§erir.
 * 
 * Ã–zellikler:
 * - ÃœrÃ¼n ekleme ve yÃ¶netimi
 * - Fabrikasyon testi iÅŸlemleri
 * - Sevkiyat yÃ¶netimi
 * - ArÄ±za Ã§Ã¶zÃ¼mÃ¼ ve servis operasyonlarÄ±
 * - ÃœrÃ¼n durumu takibi
 * - Test sonuÃ§larÄ± ve raporlama
 * 
 * URL: /dashboard/tsp
 * Authentication: Gerekli (TSP rolÃ¼)
 */

"use client";

import { 
  Typography, 
  Box, 
  Card, 
  CardContent, 
  Grid, 
  Button,
  Stack,
  Chip,
  IconButton,
  Tooltip,
  useTheme,
  useMediaQuery,
  LinearProgress
} from "@mui/material";

import { 
  Build as TSPIcon,
  Add as AddIcon,
  Science as TestIcon,
  LocalShipping as ShippingIcon,
  BugReport as IssueIcon,
  Assignment as AssignmentIcon,
  TrendingUp as TrendingUpIcon,
  Notifications as NotificationsIcon,
  ArrowForward as ArrowForwardIcon,
  CheckCircle as CheckCircleIcon,
  Schedule as ScheduleIcon
} from "@mui/icons-material";

import { useAuth } from "../../../features/auth/useAuth";
import { useRouter } from "next/navigation";
import { useEffect } from "react";

export default function TSPDashboard() {
  const { user, isAuthenticated } = useAuth();
  const router = useRouter();
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));

  // Authentication kontrolÃ¼
  useEffect(() => {
    if (!isAuthenticated) {
      router.push('/auth');
      return;
    }
    
    if (user?.role !== 'TSP') {
      router.push('/dashboard');
      return;
    }
  }, [isAuthenticated, user, router]);

  if (!isAuthenticated || user?.role !== 'TSP') {
    return (
      <Box display="flex" justifyContent="center" alignItems="center" minHeight="50vh">
        <Typography>Yetkiniz bulunmamaktadÄ±r.</Typography>
      </Box>
    );
  }

  const tspFeatures = [
    {
      title: "ÃœrÃ¼n Ekleme",
      description: "Yeni Ã¼rÃ¼nleri sisteme ekleyin ve Ã¼retim sÃ¼recini baÅŸlatÄ±n",
      icon: <AddIcon sx={{ fontSize: 40 }} />,
      color: theme.palette.primary.main,
      path: "/dashboard/products",
      stats: "15 Bekleyen ÃœrÃ¼n",
      progress: 75
    },
    {
      title: "Fabrikasyon Testi",
      description: "ÃœrÃ¼n kalite testlerini gerÃ§ekleÅŸtirin ve sonuÃ§larÄ± kaydedin",
      icon: <TestIcon sx={{ fontSize: 40 }} />,
      color: theme.palette.success.main,
      path: "/dashboard/testing",
      stats: "8 Test Bekliyor",
      progress: 60
    },
    {
      title: "Sevkiyat YÃ¶netimi",
      description: "ÃœrÃ¼n sevkiyatlarÄ±nÄ± planlayÄ±n ve takip edin",
      icon: <ShippingIcon sx={{ fontSize: 40 }} />,
      color: theme.palette.info.main,
      path: "/dashboard/shipments",
      stats: "12 HazÄ±r Sevkiyat",
      progress: 90
    },
    {
      title: "ArÄ±za Ã‡Ã¶zÃ¼mÃ¼",
      description: "MÃ¼ÅŸteri arÄ±zalarÄ±nÄ± Ã§Ã¶zÃ¼n ve servis operasyonlarÄ±nÄ± yÃ¶netin",
      icon: <IssueIcon sx={{ fontSize: 40 }} />,
      color: theme.palette.error.main,
      path: "/dashboard/issues",
      stats: "5 Aktif ArÄ±za",
      progress: 40
    },
    {
      title: "Servis OperasyonlarÄ±",
      description: "Teknik servis operasyonlarÄ±nÄ± planlayÄ±n ve yÃ¼rÃ¼tÃ¼n",
      icon: <AssignmentIcon sx={{ fontSize: 40 }} />,
      color: theme.palette.warning.main,
      path: "/dashboard/service-operations",
      stats: "3 Devam Eden Operasyon",
      progress: 65
    },
    {
      title: "Performans Takibi",
      description: "KiÅŸisel performansÄ±nÄ±zÄ± ve iÅŸ yÃ¼kÃ¼nÃ¼zÃ¼ takip edin",
      icon: <TrendingUpIcon sx={{ fontSize: 40 }} />,
      color: theme.palette.secondary.main,
      path: "/dashboard/tsp/performance",
      stats: "Bu Ay: 45 Tamamlanan",
      progress: 85
    }
  ];

  const quickStats = [
    { label: "BugÃ¼nkÃ¼ GÃ¶revler", value: "12", color: theme.palette.primary.main },
    { label: "Tamamlanan", value: "8", color: theme.palette.success.main },
    { label: "Bekleyen", value: "4", color: theme.palette.warning.main },
    { label: "Geciken", value: "1", color: theme.palette.error.main }
  ];

  return (
    <Box sx={{ p: 3 }}>
      {/* Header */}
      <Box sx={{ mb: 4 }}>
        <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
          <TSPIcon sx={{ fontSize: 32, color: theme.palette.primary.main }} />
          <Typography variant="h4" component="h1" fontWeight="bold">
            TSP Dashboard
          </Typography>
          <Chip 
            label="TEKNÄ°K SERVÄ°S PERSONELÄ°" 
            color="primary" 
            variant="outlined"
            size="small"
          />
        </Stack>
        <Typography variant="body1" color="text.secondary">
          ÃœrÃ¼n yÃ¶netimi, fabrikasyon testi ve sevkiyat iÅŸlemleri
        </Typography>
      </Box>

      {/* Welcome Message */}
      <Card sx={{ mb: 4, background: `linear-gradient(135deg, ${theme.palette.primary.main}15, ${theme.palette.success.main}15)` }}>
        <CardContent>
          <Stack direction="row" alignItems="center" justifyContent="space-between">
            <Box>
              <Typography variant="h6" gutterBottom>
                HoÅŸ geldiniz, {user?.name || 'TSP'}! ğŸ”§
              </Typography>
              <Typography variant="body2" color="text.secondary">
                BugÃ¼nkÃ¼ gÃ¶revlerinizi ve iÅŸ yÃ¼kÃ¼nÃ¼zÃ¼ buradan takip edebilirsiniz.
              </Typography>
            </Box>
            <Tooltip title="Bildirimler">
              <IconButton>
                <NotificationsIcon />
              </IconButton>
            </Tooltip>
          </Stack>
        </CardContent>
      </Card>

      {/* Quick Stats */}
      <Grid container spacing={2} sx={{ mb: 4 }}>
        {quickStats.map((stat, index) => (
          <Grid item xs={6} sm={3} key={index}>
            <Card>
              <CardContent sx={{ textAlign: 'center', py: 2 }}>
                <Typography variant="h4" fontWeight="bold" sx={{ color: stat.color }}>
                  {stat.value}
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  {stat.label}
                </Typography>
              </CardContent>
            </Card>
          </Grid>
        ))}
      </Grid>

      {/* TSP Features Grid */}
      <Grid container spacing={3}>
        {tspFeatures.map((feature, index) => (
          <Grid item xs={12} sm={6} lg={4} key={index}>
            <Card 
              sx={{ 
                height: '100%',
                transition: 'all 0.3s ease',
                '&:hover': {
                  transform: 'translateY(-4px)',
                  boxShadow: theme.shadows[8]
                },
                cursor: 'pointer'
              }}
              onClick={() => router.push(feature.path)}
            >
              <CardContent sx={{ p: 3 }}>
                <Stack spacing={2}>
                  <Stack direction="row" alignItems="center" justifyContent="space-between">
                    <Box sx={{ color: feature.color }}>
                      {feature.icon}
                    </Box>
                    <IconButton size="small" sx={{ color: feature.color }}>
                      <ArrowForwardIcon />
                    </IconButton>
                  </Stack>
                  
                  <Box>
                    <Typography variant="h6" fontWeight="bold" gutterBottom>
                      {feature.title}
                    </Typography>
                    <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
                      {feature.description}
                    </Typography>
                    
                    {/* Progress Bar */}
                    <Box sx={{ mb: 2 }}>
                      <Stack direction="row" justifyContent="space-between" sx={{ mb: 1 }}>
                        <Typography variant="caption" color="text.secondary">
                          Ä°lerleme
                        </Typography>
                        <Typography variant="caption" color="text.secondary">
                          {feature.progress}%
                        </Typography>
                      </Stack>
                      <LinearProgress 
                        variant="determinate" 
                        value={feature.progress}
                        sx={{ 
                          height: 6, 
                          borderRadius: 3,
                          backgroundColor: `${feature.color}20`,
                          '& .MuiLinearProgress-bar': {
                            backgroundColor: feature.color
                          }
                        }}
                      />
                    </Box>
                    
                    <Chip 
                      label={feature.stats}
                      size="small"
                      variant="outlined"
                      sx={{ 
                        borderColor: feature.color,
                        color: feature.color,
                        fontSize: '0.75rem'
                      }}
                    />
                  </Box>
                </Stack>
              </CardContent>
            </Card>
          </Grid>
        ))}
      </Grid>

      {/* Quick Actions */}
      <Card sx={{ mt: 4 }}>
        <CardContent>
          <Typography variant="h6" gutterBottom>
            HÄ±zlÄ± Ä°ÅŸlemler
          </Typography>
          <Stack direction={isMobile ? "column" : "row"} spacing={2}>
            <Button 
              variant="contained" 
              startIcon={<AddIcon />}
              onClick={() => router.push('/dashboard/products')}
            >
              Yeni ÃœrÃ¼n Ekle
            </Button>
            <Button 
              variant="outlined" 
              startIcon={<TestIcon />}
              onClick={() => router.push('/dashboard/testing')}
            >
              Test BaÅŸlat
            </Button>
            <Button 
              variant="outlined" 
              startIcon={<ShippingIcon />}
              onClick={() => router.push('/dashboard/shipments')}
            >
              Sevkiyat Planla
            </Button>
            <Button 
              variant="outlined" 
              startIcon={<IssueIcon />}
              onClick={() => router.push('/dashboard/issues')}
            >
              ArÄ±za Ã‡Ã¶z
            </Button>
          </Stack>
        </CardContent>
      </Card>

      {/* Today's Schedule */}
      <Card sx={{ mt: 4 }}>
        <CardContent>
          <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
            <ScheduleIcon color="primary" />
            <Typography variant="h6">
              BugÃ¼nkÃ¼ Program
            </Typography>
          </Stack>
          <Stack spacing={2}>
            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
              <Box>
                <Typography variant="body1" fontWeight="medium">
                  EA-1000 Seri Testleri
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  09:00 - 11:00
                </Typography>
              </Box>
              <Chip label="Devam Ediyor" color="primary" size="small" />
            </Box>
            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
              <Box>
                <Typography variant="body1" fontWeight="medium">
                  MÃ¼ÅŸteri ArÄ±za Ã‡Ã¶zÃ¼mÃ¼
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  14:00 - 16:00
                </Typography>
              </Box>
              <Chip label="Bekliyor" color="warning" size="small" />
            </Box>
            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
              <Box>
                <Typography variant="body1" fontWeight="medium">
                  Sevkiyat HazÄ±rlÄ±ÄŸÄ±
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  16:30 - 17:30
                </Typography>
              </Box>
              <Chip label="PlanlandÄ±" color="info" size="small" />
            </Box>
          </Stack>
        </CardContent>
      </Card>
    </Box>
  );
}
